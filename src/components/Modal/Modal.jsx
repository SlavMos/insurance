import { useState } from "react";
import s from "./modal.module.css";

const Modal = ({ isOpen, onClose }) => {
  const [firstName, setFirstName] = useState("");
  const [lastName, setLastName] = useState("");
  const [phone, setPhone] = useState("");
  const [question, setQuestion] = useState("");
  const [error, setError] = useState("");

  const sendQuestion = async () => {
    if (
      !firstName.trim() ||
      !lastName.trim() ||
      !phone.trim() ||
      !question.trim()
    ) {
      setError("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!");
      return;
    }

    setError(""); // –û—á–∏—Å—Ç–∫–∞ –æ—à–∏–±–∫–∏

    const TOKEN = "7541896677:AAH3CPluePLck6sgYi7hhz1nJA5Ys0oLqsM"; // –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
    const CHAT_ID = "239462362"; // –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π chat_id
    const URL = `https://api.telegram.org/bot${TOKEN}/sendMessage`;

    const message = `üì© –ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å!\nüë§ –ò–º—è: ${firstName} ${lastName}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}\n‚ùì –í–æ–ø—Ä–æ—Å: ${question}`;

    try {
      const response = await fetch(URL, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ chat_id: CHAT_ID, text: message }),
      });

      if (response.ok) {
        setFirstName("");
        setLastName("");
        setPhone("");
        setQuestion("");
        onClose();
      } else {
        setError("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞:", error);
      setError("–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç.");
    }
  };

  if (!isOpen) return null;

  return (
    <div className={s.modalOverlay}>
      <div className={s.modal}>
        <h1 className={s.title}> –í–æ–ø—Ä–æ—Å –ø–æ –≥–∞—Ä–∞–Ω—Ç–∏–∏</h1>
        <h2>
          –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∏ –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 5 –º–∏–Ω—É—Ç
          –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è
        </h2>

        {error && <p className={s.error}>{error}</p>}

        <input
          type="text"
          value={firstName}
          onChange={(e) => setFirstName(e.target.value)}
          placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"
          className={s.input}
        />

        <input
          type="text"
          value={lastName}
          onChange={(e) => setLastName(e.target.value)}
          placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Ñ–∞–º–∏–ª–∏—é"
          className={s.input}
        />

        <input
          type="tel"
          value={phone}
          onChange={(e) => setPhone(e.target.value)}
          placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
          className={s.input}
        />

        <textarea
          value={question}
          onChange={(e) => setQuestion(e.target.value)}
          placeholder="–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å..."
          className={s.textarea}
        ></textarea>

        <div className={s.modalButtons}>
          <button onClick={onClose} className={`${s.btn} ${s.btnClose}`}>
            –ó–∞–∫—Ä—ã—Ç—å
          </button>
          <button onClick={sendQuestion} className={`${s.btn} ${s.btnSend}`}>
            –û—Ç–ø—Ä–∞–≤–∏—Ç—å
          </button>
        </div>
      </div>
    </div>
  );
};

export default Modal;
