import { useState } from "react";
import s from "./form.module.css"; // –ù–æ–≤—ã–π CSS

const QuestionForm = () => {
  const [firstName, setFirstName] = useState("");
  const [lastName, setLastName] = useState("");
  const [phone, setPhone] = useState("");
  const [error, setError] = useState("");

  const sendQuestion = async () => {
    if (!firstName.trim() || !phone.trim() || !lastName.trim()) {
      setError("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!");
      return;
    }

    setError("");

    const TOKEN = "7541896677:AAH3CPluePLck6sgYi7hhz1nJA5Ys0oLqsM"; // –ò—Å–ø–æ–ª—å–∑—É–π —Å–≤–æ–π —Ç–æ–∫–µ–Ω
    const CHAT_ID = "239462362"; // –ò—Å–ø–æ–ª—å–∑—É–π —Å–≤–æ–π chat_id
    const URL = `https://api.telegram.org/bot${TOKEN}/sendMessage`;

    const message = `üì© –í–æ–ø—Ä–æ—Å –ø–æ –≥–∞—Ä–∞–Ω—Ç–∏–∏!\nüë§ –ò–º—è: ${firstName} \nüìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}\n‚ùì `;

    try {
      const response = await fetch(URL, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ chat_id: CHAT_ID, text: message }),
      });

      if (response.ok) {
        console.log("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!");
        setFirstName("");
        setLastName("");
        setPhone("");
      } else {
        setError("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞:", error);
      setError("–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç.");
    }
  };

  return (
    <div className={s.container}>
      <h1>–û—Ñ–æ—Ä–º–∏ –≥–∞—Ä–∞–Ω—Ç–∏—é –Ω–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—å</h1>

      {error && <p className={s.error}>{error}</p>}

      <div className={s.form}>
        <input
          type="text"
          value={firstName}
          onChange={(e) => setFirstName(e.target.value)}
          placeholder="–ò–º—è"
          maxLength={500} // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ–±–æ–ª—å—à–µ
          className={s.input}
        />

        <input
          type="text"
          value={lastName}
          onChange={(e) => setLastName(e.target.value)}
          placeholder="–§–∞–º–∏–ª–∏—è"
          className={s.input}
        />

        <input
          type="tel"
          value={phone}
          onChange={(e) => setPhone(e.target.value)}
          placeholder="–¢–µ–ª–µ—Ñ–æ–Ω"
          className={s.input}
        />

        {/* <textarea
          value={question}
          onChange={(e) => setQuestion(e.target.value)}
          placeholder="–í–∞—à –≤–æ–ø—Ä–æ—Å"
          className={s.textarea}
        ></textarea> */}

        <button onClick={sendQuestion} className={s.button}>
          –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
        </button>
      </div>
    </div>
  );
};

export default QuestionForm;
